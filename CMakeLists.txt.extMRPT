cmake_minimum_required(VERSION 2.4.6)
include($ENV{ROS_ROOT}/core/rosbuild/rosbuild.cmake)

# Set the build type.  Options are:
#  Coverage       : w/ debug symbols, w/o optimization, w/ code-coverage
#  Debug          : w/ debug symbols, w/o optimization
#  Release        : w/o debug symbols, w/ optimization
#  RelWithDebInfo : w/ debug symbols, w/ optimization
#  MinSizeRel     : w/o debug symbols, w/ optimization, stripped binaries
#set(ROS_BUILD_TYPE RelWithDebInfo)

rosbuild_init()

#set the default path for built executables to the "bin" directory
set(EXECUTABLE_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/bin)
#set the default path for built libraries to the "lib" directory
set(LIBRARY_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/lib)

#uncomment if you have defined messages
#rosbuild_genmsg()
#uncomment if you have defined services
#rosbuild_gensrv()

#common commands for building c++ executables and libraries
#rosbuild_add_library(${PROJECT_NAME} src/example.cpp)
#target_link_libraries(${PROJECT_NAME} another_library)
#rosbuild_add_boost_directories()
#rosbuild_link_boost(${PROJECT_NAME} thread)
#rosbuild_add_executable(example examples/example.cpp)
#target_link_libraries(example ${PROJECT_NAME})

#find_package( OpenCV REQUIRED )
#LINK_DIRECTORIES(${OpenCV_LIBRARY_DIRS})


include_directories ("${PROJECT_SOURCE_DIR}/src/Modules/Nav/")
include_directories ("${PROJECT_SOURCE_DIR}/src/Modules/IMU/")
include_directories ("${PROJECT_SOURCE_DIR}/src/Modules/GPS/")
include_directories ("${PROJECT_SOURCE_DIR}/src/Modules/Lane/")
include_directories ("${PROJECT_SOURCE_DIR}/src/Modules/Lidar")
include_directories ("${PROJECT_SOURCE_DIR}/src/Utils/SerialPortLinux/")

find_package(MRPT REQUIRED base slam hwdrivers)# WARNING: Add all the MRPT libs used by your program: "gui", "obs", "slam",etc. 
LINK_DIRECTORIES(${MRPT_DIR}/lib)
LINK_DIRECTORIES(${MRPT_DIR}/lib/otherlibs)
LINK_DIRECTORIES(${MRPT_SOURCE_DIR}/lib/otherlibs)
# Declare a program which uses MRPT: 
# Since we declared a ROS dependencies to mrpt_libs, 
# there's no need to add further header/lib deps at this point


rosbuild_add_executable(eklavya src/AGV.cpp ./src/Modules/IMU/IMU.cpp ./src/Modules/Nav/Planner.cpp ./src/Utils/SerialPortLinux/serial_lnx.cpp ./src/Modules/Lidar/LidarData.cpp ./src/Modules/GPS/GPS.cpp ./src/Modules/Lane/Lane.cpp)


#rosbuild_add_executable(eklavya src/AGV.cpp )

find_package(OpenCV)
target_link_libraries(eklavya ${OpenCV_LIBRARIES})
#target_link_libraries (eklavya  ${EXTRA_LIBS})
#target_link_libraries( eklavya ${OpenCV_LIBS} )
target_link_libraries( eklavya ${MRPT_LIBS} )
